---
# This is a sample file to be used as a reference for populating a list of
# tools that you wish to install into Galaxy from a Tool Shed via the
# `install_tool_shed_tools.py` script.
#
# For each tool you want to install, you must provide the following keys:
#  * name: this is is the name of the tool to install
#  * owner: owner of the Tool Shed repository from where the tools is being
#           installed
# Further, you need to provide **one** of the following two keys:
#  * tool_panel_section_id: ID of the tool panel section where you want the
#                           tool to be installed. The section ID can be found
#                           in Galaxy's `shed_tool_conf.xml` config file. Note
#                           that the specified section must exist in this file.
#                           Otherwise, the tool will be installed outside any
#                           section.
#  * tool_panel_section_label: Display label of a tool panel section where
#                              you want the tool to be installed. If it does not
#                              exist, this section will be created on the target
#                              Galaxy instance (note that this is different than
#                              when using the ID).
#                              Multi-word labels need to be placed in quotes.
#                              Each label will have a corresponding ID created;
#                              the ID will be an all lowercase version of the
#                              label, with multiple words joined with
#                              underscores (e.g., 'BED tools' -> 'bed_tools').
#
# Tou can also specify the following optional keys to further define the
# installation properties:
#  * tool_shed_url: the URL of the Tool Shed from where the tool should be
#                   installed. (default: https://toolshed.g2.bx.psu.edu)
#  * revisions: a list of revisions of the tool, all of which will attempt to
#               be installed. (default: latest)
#  * install_tool_dependencies: True or False - whether to install tool
#                               dependencies or not. (default: True)
#  * install_repository_dependencies: True or False - whether to install repo
#                               dependencies or not. (default: True)

api_key: admin
galaxy_instance: http://localhost:8080
tools:
# Bowtie2
- name: bowtie2
  owner: devteam
  tool_panel_section_label: Alignment

# Data Manager Bowtie2 Index builder
- name: data_manager_bowtie2_index_builder
  owner: devteam
  tool_panel_section_label: Alignment

# Cuffcompare
- name: cuffcompare
  owner: devteam
  tool_panel_section_label: RNASeq

# Cuffdiff
- name: cuffdiff
  owner: devteam
  tool_panel_section_label: RNASeq

# Cufflinks
- name: cufflinks
  owner: devteam
  tool_panel_section_label: RNASeq

# Cuffmerge
- name: cuffmerge
  owner: devteam
  tool_panel_section_label: RNASeq

# Cuffnorm
- name: cuffnorm
  owner: devteam
  tool_panel_section_label: RNASeq

# CummeRbund
- name: cummerbund
  owner: devteam
  tool_panel_section_label: RNASeq

# Tophat - fast splice junction mapper for RNA-Seq reads
- name: tophat2
  owner: devteam
  tool_panel_section_label: RNASeq

# StringTie is a fast and highly efficient assembler of RNA-Seq alignments into potential transcripts.
- name: stringtie
  owner: iuc
  tool_panel_section_label: RNASeq

# Trinity (from the Trinity tool suite)
- name: trinity
  owner: iuc
  tool_panel_section_label: RNASeq

# TransDecoder finds coding regions within transcripts
- name: transdecoder
  owner: iuc
  tool_panel_section_label: RNASeq

# Extract Genomic DNA
- name: extract_genomic_dna
  owner: iuc
  tool_panel_section_id: 'fetchSeq' # Fetch Sequences

# Fasta Clipping histogram
- name: fasta_clipping_histogram
  owner: devteam
  tool_panel_section_label: 'Sequence Manipulation'

# Fasta Formatter
- name: fasta_formatter
  owner: devteam
  tool_panel_section_label: 'Sequence Manipulation'

# Fasta Nucleotide changer
- name: fasta_nucleotide_changer
  owner: devteam
  tool_panel_section_label: 'Sequence Manipulation'

# Fastq Groomer
- name: fastq_groomer
  owner: devteam
  tool_panel_section_label: 'Sequence Manipulation'

# Fastq Quality boxplot
- name: fastq_quality_boxplot
  owner: devteam
  tool_panel_section_label: 'Sequence Manipulation'

# Fastq Quality converter
- name: fastq_quality_converter
  owner: devteam
  tool_panel_section_label: 'Sequence Manipulation'

# Fastq Quality filter
- name: fastq_quality_filter
  owner: devteam
  tool_panel_section_label: 'Sequence Manipulation'

# FASTQSOLEXA-to-FASTA-QUAL extracts sequences and quality scores from FASTQSOLEXA data
- name: fastqsolexa_to_fasta_qual
  owner: devteam
  tool_panel_section_label: 'Sequence Manipulation'

# Remove sequencing artifacts
- name: fastx_artifacts_filter
  owner: devteam
  tool_panel_section_label: 'Sequence Manipulation'

# Barcode Splitter
- name: fastx_barcode_splitter
  owner: devteam
  tool_panel_section_label: 'Sequence Manipulation'

# Clip adapter sequences
- name: fastx_clipper
  owner: devteam
  tool_panel_section_label: 'Sequence Manipulation'

# Collapse sequences
- name: fastx_collapser
  owner: devteam
  tool_panel_section_label: 'Sequence Manipulation'

# Draw nucleotides distribution chart
- name: fastx_nucleotides_distribution
  owner: devteam
  tool_panel_section_label: 'Sequence Manipulation'

# Compute quality statistics
- name: fastx_quality_statistics
  owner: devteam
  tool_panel_section_label: 'Sequence Manipulation'

# Rename sequences
- name: fastx_renamer
  owner: devteam
  tool_panel_section_label: 'Sequence Manipulation'

# Reverse-Complement
- name: fastx_reverse_complement
  owner: devteam
  tool_panel_section_label: 'Sequence Manipulation'

# Trim sequences
- name: fastx_trimmer
  owner: devteam
  tool_panel_section_label: 'Sequence Manipulation'

# A flexible read trimming tool for Illumina NGS data
- name: trimmomatic
  owner: pjbriggs
  tool_panel_section_label: 'Sequence Manipulation'

# cd-hit - reduce a collection of sequences to a representative sample
- name: cdhit
  owner: jjohnson
  tool_panel_section_label: 'Sequence Manipulation'

# FASTQ to FASTA converter
- name: fastq_to_fasta
  owner: devteam
  tool_panel_section_id: 'convert'

# FASTQ to FASTA converter
- name: fastq_to_fasta
  owner: devteam
  tool_panel_section_id: 'convert'

# FASTQ to FASTA converter
- name: fastq_to_fasta_python
  owner: devteam
  tool_panel_section_id: 'convert'

# Tabular-to-FASTA
- name: tabular_to_fasta
  owner: devteam
  tool_panel_section_id: 'convert'

# Read QC reports using FastQC
- name: fastqc
  owner: devteam
  tool_panel_section_label: FastQC

# Fetch closest non-overlapping feature for every interval
- name: flanking_features
  owner: devteam
  tool_panel_section_id: 'group'

# Intersect the intervals of two datasets
- name: intersect
  owner: devteam
  tool_panel_section_id: 'group'

# Merge the overlapping intervals of a dataset
- name: merge
  owner: devteam
  tool_panel_section_id: 'group'

# Subtract the intervals of two datasets
- name: subtract
  owner: devteam
  tool_panel_section_id: 'group'

# A suite of Galaxy utilities associated with version 0.0.13 of the FASTX-Toolkit package.
- name: suite_fastx_toolkit_0_0_13
  owner: devteam
  tool_panel_section_id: 'group'

# Against miRBase repository
- name: miraligner
  owner: lpantano
  tool_panel_section_label: miRNA

# Finds potential target sites for miRNAs in genomic sequences
- name: miranda
  owner: tgac
  tool_panel_section_label: miRNA

# Identification of novel and known miRNAs
- name: mirdeep2
  owner: rnateam
  tool_panel_section_label: miRNA

# MiRDeep2 Mapper - process and map reads to a reference genome 
- name: mirdeep2_mapper
  owner: rnateam
  tool_panel_section_label: miRNA

# fast quantitation of reads mapping to known miRBase precursors 
- name: mirdeep2_quantifier
  owner: rnateam
  tool_panel_section_label: miRNA

# The ViennaRNA Package consists of several stand-alone programs for the prediction and comparison of RNA secondary structures. 
- name: vienna_rna
  owner: rnateam
  tool_panel_section_label: miRNA

# Bed tools
- name: bedtools
  owner: iuc
  tool_panel_section_label: 'BED tools'

# Use python regular expressions to find and replace text
- name: regex_find_replace
  owner: jjohnson
  tool_panel_section_id: 'textutil'